jobs:
- job: SetEnvironmentVariables
  displayName: "Set Global Environment Variables"
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - script: |
      echo "##vso[task.setvariable variable=AZURE_SAS_TOKEN;isSecret=true]$(AZURE_SAS_TOKEN)"
      echo "##vso[task.setvariable variable=AZURE_STORAGE_CONNECTION_STRING]$(AZURE_STORAGE_CONNECTION_STRING)"
      echo "##vso[task.setvariable variable=AZURE_SAS_RELEASE_NOTE]$(AZURE_SAS_RELEASE_NOTE)"
      echo "##vso[task.setvariable variable=AZURE_BLOB_CONTAINER_NAME]$(AZURE_BLOB_CONTAINER_NAME)"
      echo "##vso[task.setvariable variable=AZURE_RELEASE_NOTES_CONTAINER]$(AZURE_RELEASE_NOTES_CONTAINER)"
      echo "##vso[task.setvariable variable=AZURE_BLOB_ACCOUNT_NAME]$(AZURE_BLOB_ACCOUNT_NAME)"
      echo "##vso[task.setvariable variable=DB_SERVER]$(DB_SERVER)"
      echo "##vso[task.setvariable variable=DB_NAME]$(DB_NAME)"
      echo "##vso[task.setvariable variable=DB_USER]$(DB_USER)"
      echo "##vso[task.setvariable variable=DB_PASSWORD;isSecret=true]$(DB_PASSWORD)"
    displayName: 'Set Environment Variables Globally'

- job: UploadToBlob
  displayName: "Upload Files"
  dependsOn: SetEnvironmentVariables  # âœ… Ensure this runs after setting env variables
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - download: current
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
  - script: pip install -r requirements.txt
    displayName: 'Install Dependencies'
  - script: python $(Pipeline.Workspace)/deployment-scripts/upload_to_blob.py
    displayName: 'Upload Files to Blob Storage'

- job: InsertIntoDatabase
  displayName: "Process Data"
  dependsOn: UploadToBlob
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - download: current
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
  - script: pip install -r requirements.txt
    displayName: 'Install Dependencies'
  - script: python $(Pipeline.Workspace)/deployment-scripts/process_data.py
    displayName: 'Read Blob & Insert Data into Database'

- job: GenerateReleaseNote
  displayName: "Generate Release Note & Notify"
  dependsOn: InsertIntoDatabase
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - download: current
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
  - script: pip install -r requirements.txt
    displayName: 'Install Dependencies'
  - script: python $(Pipeline.Workspace)/deployment-scripts/generate_release_note.py
    displayName: 'Generate Release Note'
  - script: python $(Pipeline.Workspace)/deployment-scripts/send_email.py
    displayName: 'Send Email Notification'
